pipeline {
    agent any

    environment {
        EMAIL_RECIPIENTS = 's224028935@deakin.edu.au'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/tchdy/Jenkins-pipeline.git'
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    try {
                        sh 'npm test | tee test.log'
                        currentBuild.result = 'SUCCESS'
                    } catch (err) {
                        currentBuild.result = 'FAILURE'
                        echo "Tests failed"
                        throw err
                    } finally {
                        emailext(
                            to: "${EMAIL_RECIPIENTS}",
                            subject: "Jenkins: Test Stage - ${currentBuild.currentResult}",
                            body: "The test stage has completed with status: ${currentBuild.currentResult}.",
                            attachmentsPattern: 'test.log',
                            compress: false
                        )
                    }
                }
            }
        }

        stage('Generate Coverage Report') {
            steps {
                sh 'npm run coverage || true'
            }
        }

        stage('Security Scan') {
            steps {
                script {
                    try {
                        sh 'npm audit | tee audit.log || exit 0'
                        currentBuild.result = 'SUCCESS'
                    } catch (err) {
                        currentBuild.result = 'FAILURE'
                        echo "Security audit failed"
                        throw err
                    } finally {
                        emailext(
                            to: "${EMAIL_RECIPIENTS}",
                            subject: "Jenkins: Security Scan - ${currentBuild.currentResult}",
                            body: "The security scan stage has completed with status: ${currentBuild.currentResult}.",
                            attachmentsPattern: 'audit.log',
                            compress: false
                        )
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline execution finished.'
        }
    }
}
